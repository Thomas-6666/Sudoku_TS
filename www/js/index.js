function y(_){function A(q){q.stopPropagation();const{offsetX:N,offsetY:X}=q,F=Math.min(Math.floor(N/_.ui.cellSize),8),Y=Math.min(Math.floor(X/_.ui.cellSize),8),h=_.getSelectedCell();if(h===null||h[0]!==F||h[1]!==Y)_.setSelectedCell([F,Y]),_.refreshGrid()}function B(q){if(q.stopPropagation(),_.getSelectedCell()!==null)_.setSelectedCell(null),_.refreshGrid()}function L(q){if(q.stopPropagation(),q.key>="1"&&q.key<="9"&&_.getSelectedCell()!==null)_.toggle(parseInt(q.key))}_.canvas.addEventListener("mousemove",A),_.canvas.addEventListener("mouseout",B),document.onkeyup=L}class Q{_;A;static _uis=new WeakMap;static bgColor="#DDD";static thinLineColor="#AAA";static boldLineColor="#000";static impactedColor="#eec";static selectedColor="#ff6";static get(_){if(Q._uis.has(_))return Q._uis.get(_);const A=_.getContext("2d");if(A===null)return!1;const B=new Q(_,A);return Q._uis.set(_,B),B}_cellSize;constructor(_,A){this._canvas=_;this._ctx=A;this._cellSize=Math.round(Math.min(_.width,_.height)/9)}get width(){return this._canvas.width}get height(){return this._canvas.height}get cellSize(){return this._cellSize}clearCanvas(){return this._ctx.fillStyle=Q.bgColor,this._ctx.fillRect(0,0,this.width,this.height),this}drawCell(_,A,B=this._cellSize,L=Q.thinLineColor,q){const N=_*B,X=A*B;if(q)this._ctx.fillStyle=q,this._ctx.fillRect(N+1,X+1,B-2,B-2);return this._ctx.strokeStyle=L,this._ctx.strokeRect(N,X,B,B),this}drawRow(_,A){for(let B=0;B<9;B++)this.drawCell(B,_,this._cellSize,Q.thinLineColor,A);return this}drawColumn(_,A){for(let B=0;B<9;B++)this.drawCell(_,B,this._cellSize,Q.thinLineColor,A);return this}drawGroup(_,A,B){this.drawCell(_,A,this._cellSize*3,Q.boldLineColor,B);for(let L=0;L<3;L++)for(let q=0;q<3;q++)this.drawCell(_*3+q,A*3+L,this._cellSize,Q.thinLineColor);return this}drawCellValue(_,A,B){this._ctx.fillStyle="#000",this._ctx.font="bold 60px Arial",this._ctx.textBaseline="middle",this._ctx.textAlign="center";const L=_*this._cellSize+Math.floor(this._cellSize*0.5),q=A*this._cellSize+Math.floor(this._cellSize*0.575);return this._ctx.fillText(B.toString(),L,q),this}drawCellDomain(_,A,B){this._ctx.fillStyle="#000",this._ctx.font="16px Arial",this._ctx.textBaseline="top",this._ctx.textAlign="start";const L=Math.max(this._cellSize-2,Math.floor(this._cellSize*0.8)),q=Math.floor(L/3),N=Math.max(1,Math.floor(this._cellSize*0.1)),X=_*this._cellSize+N,F=A*this._cellSize+N;for(let Y=1;Y<=9;Y++){const h=B.includes(Y)?Y:null,O=(Y-1)%3,T=Math.floor((Y-1)/3),M=X+q*O,E=F+q*T;this._ctx.fillText(h!==null?h.toString():"",M,E)}return this}drawEmptyGrid(){this.clearCanvas();for(let _=0;_<3;_++)for(let A=0;A<3;A++)this.drawGroup(A,_);return this}colorizeSelectedStuff(_){if(_===null)return this;const A=[Math.floor(_[0]/3),Math.floor(_[1]/3)];return this.drawRow(_[1],Q.impactedColor).drawColumn(_[0],Q.impactedColor).drawGroup(A[0],A[1],Q.impactedColor).drawCell(_[0],_[1],this._cellSize,Q.thinLineColor,Q.selectedColor),this}}function J(){const _=new WebSocket(`ws://${location.host}`);_.onopen=()=>setInterval(()=>_.send("ping"),5000),_.onmessage=(A)=>{if(A.data!=="Well received")console.log(A.data);if(A.data==="reload")location.reload()}}var f=function(_){const A=document.getElementById(_);if(A===null)return console.error("Cannot get the given Canvas 2D rendering context"),!1;const B=Q.get(A);if(!B)return!1;const L=[],q=[];for(let N=0;N<9;N++){L.push([]),q.push([]);for(let X=0;X<9;X++)L[N].push([1,2,3,4,5,6,7,8,9]),q[N].push(null)}return{canvas:A,ui:B,cellDomains:L,cellValues:q}},D=function(_){const{canvas:A,ui:B,cellDomains:L,cellValues:q}=_;let N=null;function X(E,K){if(q[K][E]!==null)B.drawCellValue(E,K,q[K][E]);else B.drawCellDomain(E,K,L[K][E])}function F(){for(let E=0;E<9;E++)for(let K=0;K<9;K++)X(K,E)}function Y(E,K,R){const W=L[K][E],Z=W.indexOf(R);if(Z!==-1)W.splice(Z,1)}function h(E,K,R){const W=L[K][E];if(!W.includes(R))W.push(R)}function O(E,K,R,W){const Z=W?Y:h;for(let $=0;$<9;$++){if($!==E)Z($,K,R);if($!==K)Z(E,$,R)}const x=Math.floor(E/3),G=Math.floor(K/3);for(let $=0;$<3;$++)for(let b=0;b<3;b++){const H=x*3+b,P=G*3+$;if(H!==E&&P!==K)Z(H,P,R)}}function T(E){const K=N[0],R=N[1];if(q[R][K]===null){if(L[R][K].includes(E))q[R][K]=E,O(K,R,E,!0),M()}else if(q[R][K]===E){q[R][K]=null,O(K,R,E,!1);for(let W=0;W<9;W++)for(let Z=0;Z<9;Z++)if(q[W][Z]===E)O(Z,W,E,!0);M()}}function M(){B.drawEmptyGrid().colorizeSelectedStuff(N),F()}y({canvas:A,ui:B,refreshGrid:M,toggle:T,getSelectedCell:()=>N,setSelectedCell:(E)=>N=E}),J(),M()},w=f("sudokuCanvas");if(w)D(w);
